{% extends "partials/base.twig" %}

{% block config %}
  {{ parent() }}

  {% if ENV == 'development' %}
    {% set page = page|merge(
      {
        classes: 'is-pricing',
      }
    ) %}
  {% endif %}
{% endblock %}

{% block head %}
  {{ parent() }}
  <link rel="stylesheet" href="{{ site.assets_prefix }}/assets/css/pricing.css?{{ "now"|date('U') }}">
{% endblock %}

{# MAIN CONTENT ------------------------------------------------------------- #}
{% block content %}

  {# PLANS #}
  {% set data_plans = [
    {
      "title": "Free",
      "icon": "gift",
      "price": 0,
      "subtitle": "Try it out to assess the accuracy of our AI algorithms",
      "link": "/" ~ page.lang ~ "/auth?tab=signup&plan=free",
      "anchor": "Sign Up",
      "features": [
        "AI-powered analysis of Bitcoin and Ethereum",
        "One trading signal per day",
        "Access to the forecasts feed with a one-hour delay",
      ]
    },
    {
      "title": "Trader",
      "icon": "user",
      "price": 29,
      "subtitle": "Perfect for beginner active traders",
      "link": "/" ~ page.lang ~ "/auth?tab=signup&plan=trader&interval=annual",
      "features": [
        "AI analysis of the top 20 cryptocurrencies",
        "Up to 10 trading signals per day",
        "Real-time signal notifications",
        "Basic market sentiment indicators",
        "Integration with major crypto exchanges",
        "Weekly reports and forecasts",
        "Priority chat support"
      ]
    },
    {
      "title": "Expert",
      "icon": "star",
      "price": 79,
      "subtitle": "Optimal choice for professional traders",
      "link": "/" ~ page.lang ~ "/auth?tab=signup&plan=expert&interval=annual",
      "features": [
        "Everything in the &quot;Trader&quot; plan",
        "AI analysis of over 100 cryptocurrencies",
        "Unlimited number of signals",
        "Advanced market trend analytics",
        "Personalized trading strategies",
        "In-depth market sentiment analysis",
        "API access",
        "Telegram and Email notification",
        "Data export in CSV/Excel",
        "Access to historical data",
        "24/7 support"
      ],
      "isFeatured": true
    },
    {
      "title": "Premium",
      "icon": "crown",
      "price": 199,
      "subtitle": "Designed for professional teams and crypto funds",
      "link": "/" ~ page.lang ~ "/auth?tab=signup&plan=premium&interval=annual",
      "features": [
        "Everything in the &quot;Expert&quot; plan",
        "Full analysis of all tradable cryptocurrencies",
        "AI assistant for personal consultations",
        "Predictive analytics of future trends",
        "Automated trading via API",
        "Customizable trading strategies",
        "Detailed on-chain metrics analysis",
        "Correlation analysis with traditional markets",
        "Private research and reports",
        "VIP support with a personal manager",
        "Early access to new features",
        "Group online consultations with experts"
      ]
    }
  ] %}
  <section class="e-section is-plans">
    <div class="e-container">
      <header class="e-section__header is-centered">
        <h1 class="e-section__title is-highlight mb-0">{{ 'Choose Your Plan'|trans }}</h1>
        <p>{{ 'Two CryptoAI products — AI Consultant and API Integrations — are available by subscription. However, you can start using them completely free.'|trans }}</p>
        <div class="e-section__controls d-none tablet:d-flex">
          <button class="btn has-tooltip" data-role="plans-scroller" data-target="start" aria-label="{{ 'To Start'|trans }}" disabled>
            {% include 'partials/icon.twig' with {name: 'sm-chevron-left'} %}
          </button>

          <div class="e-segmented-control">
            <label class="e-segmented-control__item" for="billing-monthly">
              <input id="billing-monthly" name="interval" type="radio">
              {{ 'Monthly Payment'|trans }}
            </label>
            <label class="e-segmented-control__item" for="billing-annual">
              <input id="billing-annual" name="interval" type="radio" checked>
              {{ 'Annual Payment (15% Discount)'|trans }}
            </label>
          </div>

          <button class="btn has-tooltip" data-role="plans-scroller" data-target="end" aria-label="{{ 'To End'|trans }}">
            {% include 'partials/icon.twig' with {name: 'sm-chevron-right'} %}
          </button>
        </div>
      </header>
    </div>

    <div class="e-section__scroller">
      <div class="e-plans">
        {% for plan in data_plans %}
          {% include 'partials/plan.twig' with {'plan': plan, 'site': site} only %}
        {% endfor %}
      </div>
    </div>
  </section>

  {# AGENT PRICE #}
  <section class="e-section is-agent-price">
    <div class="e-container">
      <div class="e-section__image">
        <img src="{{ site.assets_prefix }}/assets/img/components/agent-price.jpg" srcset="{{ site.assets_prefix }}/assets/img/components/agent-price.jpg 1x, {{ site.assets_prefix }}/assets/img/components/agent-price@2x.jpg 2x" alt="Цена торгового агента">
      </div>
      <div class="e-section__body">
        <h2>{{ 'Trading Agent Pricing'|trans }}</h2>
        <p>{{ 'The AI trading agent’s services are paid on a different basis.'|trans }}</p>
        <p class="text-success">{{ 'You pay 10% on each profitable trade, with a minimum of $1.'|trans }}</p>
        <a class="e-btn" href="/{{ page.lang }}/auth?tab=signup&plan=agent">{{ 'Choose This One'|trans }}</a>
      </div>
    </div>
  </section>
{% endblock %}

{% block body_suffix %}
  {{ parent() }}

  <script type="module">
    // 1. Кнопки прокрутки планов
    const MIN = 1024;
    const MAX = 1359;
    const scroller = document.querySelector('.e-section__scroller');
    const startBtn = document.querySelector(
      '[data-role="plans-scroller"][data-target="start"]'
    );
    const endBtn = document.querySelector(
      '[data-role="plans-scroller"][data-target="end"]'
    );

    if (scroller && startBtn && endBtn) {
      const updateScrollBtns = () => {
        const vw = window.innerWidth;
        const active = vw >= MIN && vw <= MAX;
        if (!active) {
          startBtn.disabled = true;
          endBtn.disabled = true;
          return;
        }

        startBtn.disabled = scroller.scrollLeft <= 0;
        endBtn.disabled =
          scroller.scrollLeft + scroller.clientWidth >= scroller.scrollWidth - 1;
      };

      const scrollToEdge = (edge) =>
        scroller.scrollTo({
          left: edge === 'start' ? 0 : scroller.scrollWidth - scroller.clientWidth,
          behavior: 'smooth',
        });

      startBtn.addEventListener('click', () => scrollToEdge('start'));
      endBtn.addEventListener('click', () => scrollToEdge('end'));
      scroller.addEventListener('scroll', updateScrollBtns);
      window.addEventListener('resize', updateScrollBtns);
      updateScrollBtns();
    }

    // 2. Переключатель оплаты (annual / monthly)
    const monthlyRadio = document.getElementById('billing-monthly');
    const annualRadio = document.getElementById('billing-annual');
    const plans = [...document.querySelectorAll('.e-plan')];

    // Сохраняем годовую цену
    plans.forEach((plan) => {
      const priceEl = plan.querySelector('.e-plan__price strong');
      if (priceEl) priceEl.dataset.annual = priceEl.textContent.trim();
    });

    const format = (v) => Number(v).toLocaleString('en-US');
    const setIntervalParam = (href, interval) => {
      try {
        const url = new URL(href, window.location.origin);
        if (interval) {
          url.searchParams.set('interval', interval);
        } else {
          url.searchParams.delete('interval');
        }
        return url.pathname + url.search;
      } catch {
        return href;
      }
    };

    const updateBilling = () => {
      const monthly = monthlyRadio?.checked;
      plans.forEach((plan, idx) => {
        const priceEl = plan.querySelector('.e-plan__price strong');
        const linkEl = plan.querySelector('a.e-btn');
        if (!priceEl || !linkEl) return;

        /* Free plan (index 0) — только ссылка */
        if (idx === 0) {
          linkEl.href = setIntervalParam(
            linkEl.href,
            monthly ? 'monthly' : 'annual'
          );
          return;
        }

        const annual = Number(priceEl.dataset.annual);
        const monthlyPrice = Math.round(annual * 1.15);
        priceEl.textContent = format(monthly ? monthlyPrice : annual);
        linkEl.href = setIntervalParam(linkEl.href, monthly ? 'monthly' : 'annual');
      });
    };

    monthlyRadio?.addEventListener('change', updateBilling);
    annualRadio?.addEventListener('change', updateBilling);

  </script>
{% endblock %}
